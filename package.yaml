name:                encryptable
version:             0.1
github:              "coingaming/encryptable"
license:             BSD3
author:              "Ilja Tkachuk <tkachuk.labs@gmail.com>"
maintainer:          "Ilja Tkachuk <tkachuk.labs@gmail.com>"
copyright:           "2020 Coingaming <hello@coingaming.io>"
synopsis:            Typed encryption with persistent support
category:            Cryptography, Database, Yesod
description:         You can find documentation at <http://hackage.haskell.org/package/encryptable/docs/Encryptable.html hackage>

extra-source-files:
- README.md
- ChangeLog.md

dependencies:
# foundation
- base >= 4.7 && < 5
- universum
# storage
- esqueleto
- persistent
- persistent-template
# bytes and text
- bytestring
- text
# crypto
- cryptonite
# tests
- QuickCheck
- quickcheck-instances
- generic-arbitrary

library:
  source-dirs: src
  default-extensions:
  - NoImplicitPrelude
  - MultiParamTypeClasses
  - LambdaCase
  - OverloadedStrings
  - ScopedTypeVariables
  ghc-options:
  # For details on warnings: https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
  # Enable all warnings with -Weverything, then disable the ones we don’t care about
  - -Weverything
  - -Werror
  - -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures. See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
  - -Wno-missing-import-lists # Requires explicit imports of _every_ function (e.g. ‘$’); too strict
  - -Wno-missed-specialisations # When GHC can’t specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
  - -Wno-all-missed-specialisations # See missed-specialisations
  - -Wno-unsafe # Don’t use Safe Haskell warnings
  - -Wno-safe # Don’t use Safe Haskell warnings
  - -Wno-missing-local-signatures # Warning for polymorphic local bindings; nothing wrong with those.
  - -Wno-monomorphism-restriction # Don’t warn if the monomorphism restriction is used
  dependencies:
  - hspec

tests:
  encryptable-test:
    main:                Spec.hs
    source-dirs:         test
    default-extensions:
    - NoImplicitPrelude
    - MultiParamTypeClasses
    - LambdaCase
    - OverloadedStrings
    - ScopedTypeVariables
    ghc-options:
    # For details on warnings: https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
    # Enable all warnings with -Weverything, then disable the ones we don’t care about
    - -Weverything
    - -Werror
    - -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures. See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
    - -Wno-missing-import-lists # Requires explicit imports of _every_ function (e.g. ‘$’); too strict
    - -Wno-missed-specialisations # When GHC can’t specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
    - -Wno-all-missed-specialisations # See missed-specialisations
    - -Wno-unsafe # Don’t use Safe Haskell warnings
    - -Wno-safe # Don’t use Safe Haskell warnings
    - -Wno-missing-local-signatures # Warning for polymorphic local bindings; nothing wrong with those.
    - -Wno-monomorphism-restriction # Don’t warn if the monomorphism restriction is used
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - encryptable
    - hspec
